@PREPARE_DUEL_PLAYBOARD, PREPARED
#DIM DYNAMIC GDI値
#DIM SRC_WIDTH
#DIM SRC_HEIGHT
#DIM PASTE_WIDTH
#DIM PASTE_HEIGHT
#DIM PASTE_X
#DIM PASTE_Y
#DIM PREPARED
#DIM FONTSIZE
#DIM LINEHEIGHT
#DIMS HTML_TEXT

; 引数
; 	PREPARED
;		0: prepare background canva befor DUEL start, if something changed, such as OPPOSER change in Duel (난입ペナルティ-2000), call function with 0 again.
;		1: display canvas during DUEL
;

IF PREPARED == 0
	FONTSIZE = GETCONFIG("フォントサイズ")
	LINEHEIGHT = GETCONFIG("一行の高さ")

	; canvas
	GDISPOSE 5000
	GCREATE 5000, FONTSIZE*120, LINEHEIGHT * 38

	; SPRITE OF DUEL PLAYBOARD
	SPRITEDISPOSE "DUEL_PLAYBOARD"
	SPRITECREATE "DUEL_PLAYBOARD", 5000

	; PREPARE MASTER THUMBNAIL
	CALL PREPARE_DUEL_THUMBNAIL(MASTER)
	GDI値 = RESULT
	SRC_WIDTH = GWIDTH(GDI値)
	SRC_HEIGHT = GHEIGHT(GDI値)
	; specific image height on canva
	PASTE_HEIGHT = LINEHEIGHT * 4
	TIMES PASTE_HEIGHT, 0.80

	; calculate relative width on canva
	PASTE_WIDTH = SRC_WIDTH * PASTE_HEIGHT / SRC_HEIGHT
	; specific x,y on canva
;	PASTE_X = FONTSIZE * 10
	PASTE_X = FONTSIZE * 6
	PASTE_Y = LINEHEIGHT * 18

	GDRAWG 5000, GDI値, PASTE_X, PASTE_Y, PASTE_WIDTH, PASTE_HEIGHT, 0, 0, SRC_WIDTH, SRC_HEIGHT

	; PREPARE OPPOSER THUMBNAIL
	CALL PREPARE_DUEL_THUMBNAIL(OPPOSER)
	GDI値 = RESULT
	SRC_WIDTH = GWIDTH(GDI値)
	SRC_HEIGHT = GHEIGHT(GDI値)
	PASTE_HEIGHT = LINEHEIGHT * 4
	TIMES PASTE_HEIGHT, 0.80
	PASTE_WIDTH = SRC_WIDTH * PASTE_HEIGHT / SRC_HEIGHT
	PASTE_X = FONTSIZE * 48
	TIMES PASTE_X, 0.99
	PASTE_Y = LINEHEIGHT * 18
	GDRAWG 5000, GDI値, PASTE_X, PASTE_Y, PASTE_WIDTH, PASTE_HEIGHT, 0, 0, SRC_WIDTH, SRC_HEIGHT
ELSE
	HTML_TEXT = <img src='DUEL_PLAYBOARD' width='{FONTSIZE * 120}px' height='{LINEHEIGHT * 38}px'>
	HTML_PRINT HTML_TEXT, 0
ENDIF

RETURN 0

;サムネ画像関連（Duelの目線だけ映すやつ）
@PREPARE_DUEL_THUMBNAIL(ARG, CROP_YPOS = 30, CROP_HEIGHT = 30)
#DIM DYNAMIC GDI値
#DIM DYNAMIC GRAPH_SIZE
#DIM MASK_COLOR
#DIMS HTML_TEXT_MASTER
#DIMS HTML_TEXT_TARGET
#DIMS HTML_TEXT
#DIM FONTSIZE
#DIM LINEHEIGHT
#DIM CROP_YPOS
#DIM CROP_HEIGHT

MASK_COLOR = 0xFFFFFFFF

; 引数
; 	ARGS: MASTER, OPPOSER
; 	CROP_YPOS: reference y pos for cropping
; 	CROP_HEIGHT: height of croped image
; GDI値
; 	0:	OPPOSER, was prepared after line 58 SHOW_GRAPHICS called
; 	20:	master, prepared before DUEL start
; 	1:	mask
;   21:	cropped image
;   22: corpped image with mask

; BORDER
IF ENUMFILES("RESOURCES/WAKU", @"WAKU_BORDER_1.*")
SPLIT RESULTS, "\\", RESULTS
GCREATEFROMFILE 23, "WAKU/"+RESULTS:(RESULT-1)
SPRITECREATE @"WAKU_BORDER_1", 23
ENDIF
IF ENUMFILES("RESOURCES/WAKU", @"WAKU_BORDER_2.*")
SPLIT RESULTS, "\\", RESULTS
GCREATEFROMFILE 24, "WAKU/"+RESULTS:(RESULT-1)
SPRITECREATE @"WAKU_BORDER_2", 24
ENDIF

SPRITEDISPOSE "CROP_THUMBNAIL"
IF ARG != MASTER && ARG != -1
	; ENEMY
	GDI値 = 60
	CALL SHOW_GRAPHICS(ARG,GDI値,1)
	IF SPRITECREATED(@"{NO:ARG}_THUMB") == 0
		DEBUGPRINTFORML {NO:ARG}_THUMB not exist
		ARG = -1
	ENDIF
	GWIDTH GDI値
	GRAPH_SIZE = RESULT
	DEBUGPRINTFORML ENEMY_GRAPH   {NO:ARG}_THUMB {GRAPH_SIZE} x {GRAPH_SIZE}
	GDRAWSPRITE GDI値, @"WAKU_BORDER_2",0,0,GRAPH_SIZE,GRAPH_SIZE
ELSEIF ARG == MASTER
	; MASTER
	GDI値 = 61
	CALL SHOW_GRAPHICS(ARG,GDI値,1)
	IF SPRITECREATED(@"{NO:ARG}_THUMB") == 0
		DEBUGPRINTFORML {NO:ARG}_THUMB not exist
		ARG = -1
	ENDIF
	GWIDTH GDI値
	GRAPH_SIZE = RESULT
	DEBUGPRINTFORML ENEMY_MASTER  {NO:ARG}_THUMB {GRAPH_SIZE} x {GRAPH_SIZE}
	GDRAWSPRITE GDI値, @"WAKU_BORDER_1",0,0,GRAPH_SIZE,GRAPH_SIZE	
ELSE
	; GENERAL
	GDI値 = 60
	CALL SHOW_GRAPHICS(ARG,GDI値,1)
	IF SPRITECREATED(@"-1_THUMB") == 0
		DEBUGPRINTFORML -1_THUMB not exist
		ARG = -1
	ENDIF
	GWIDTH GDI値
	GRAPH_SIZE = RESULT
	DEBUGPRINTFORML ENEMY_GENERAL -1_THUMB {GRAPH_SIZE} x {GRAPH_SIZE}
	GDRAWSPRITE GDI値, @"WAKU_BORDER_2",0,0,GRAPH_SIZE,GRAPH_SIZE
ENDIF

IF ARG == -1 && LOCAL == 10
	;NOT EXIST OR NO FACE IMAGE
	GDISPOSE 22
	GCREATE 22, 180, 180*CROP_HEIGHT/10
	SPRITECREATE "CROP_THUMBNAIL", 22
	RETURN 22
ENDIF

GRAPH_SIZE = GWIDTH(GDI値)
SPRITECREATE "CROP_THUMBNAIL", GDI値, 0, GRAPH_SIZE*CROP_YPOS/100, GRAPH_SIZE, GRAPH_SIZE*CROP_HEIGHT/100
; CROPED
GDISPOSE 21
GCREATE 21, GRAPH_SIZE, GRAPH_SIZE*CROP_HEIGHT/100
GDRAWSPRITE 21, "CROP_THUMBNAIL"

;[SKIPSTART]
; CREATE MASK GDI = 1
GDISPOSE 1
GCREATE 1, GRAPH_SIZE, GRAPH_SIZE*CROP_HEIGHT/100
GSETBRUSH 1, MASK_COLOR
GFILLRECTANGLE 1, 0, 0, GRAPH_SIZE, GRAPH_SIZE*CROP_HEIGHT/100
;[SKIPEND]

; MASKED ON IMAGE
GDISPOSE 22
GCREATE 22, GRAPH_SIZE, GRAPH_SIZE*CROP_HEIGHT/100
GDRAWGWITHMASK 22, 21, 1, 0, 0
; RELOAD CROPPED MASKED IMAGE
SPRITEDISPOSE "CROP_THUMBNAIL"
SPRITECREATE "CROP_THUMBNAIL", 22

RETURN 22